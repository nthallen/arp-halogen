%{
  const char *IxDrive_text[] = {
	"  <  ",
	"| <  ",
	"  < |",
	"| < |",
	"  >  ",
	"| >  ",
	"  > |",
	"| > |",
	"<----",  /* driving in */
	"|<---",  /* driving in against in limit */
	"<---|",  /* driving in from out limit */
	"|<--|",  /* driving in both limits. Broke */
	"---->",  /* driving out */
	"|--->",  /* driving out from in limit */
	"--->|",  /* driving out agains out limit */
	"|-->|"   /* driving out both limits. Broke */
  };
%}
TM typedef unsigned char IxDriveStat { text "%5d" IxDrive_text[]; }
IxDriveStat SV2Stat; invalidate SV2Stat; { SV2Stat = SV2St & 0xF; Validate SV2Stat; }
%{
  const char *IxKillStat_text[] = {
    "----",
    "---A",
    "--B-",
    "--BA",
    "-Z--",
    "-Z-A",
    "-ZB-",
    "-ZBA",
    "C---",
    "C--A",
    "C-B-",
    "C-BA",
    "CZ--",
    "CZ-A",
    "CZB-",
    "CZBA"
  };
%}
TM typedef unsigned char IxKillStat { text "%4d" IxKillStat_text[]; }
IxKillStat SV2CZBA; invalidate SV2CZBA; { SV2CZBA = (SV2St >> 4) & 0xF; Validate SV2CZBA; }
%{
  const char *IdxFlgTxt[8] = {
	"    ",
	"Scan",
	"On  ",
	"S/On",
	"Off ",
	"S/Of",
	"Alt ",
	"S/Al"
  };
%}
TM typedef unsigned short IndxrFlag {
  text "%4d" IdxFlgTxt[];
}

IndxrFlag SV2Flg; invalidate SV2Flg;
{ SV2Flg = ( IXStt ) & 1; validate SV2Flg; }
